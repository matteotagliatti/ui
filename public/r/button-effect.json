{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-effect",
  "type": "registry:component",
  "title": "Button Effect",
  "description": "A button effect component",
  "dependencies": [
    "class-variance-authority",
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "utils"
  ],
  "files": [
    {
      "path": "registry/default/components/button-effect.tsx",
      "content": "import * as React from \"react\";\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\n/* Add in globals.css the following:\n\nInside @theme inline:\n--animate-shine: shine 3s ease-out infinite;\n--animate-gradient-flow: gradientFlow 10s ease 0s infinite normal none running;\n\nFor every color theme add you animation colors:\n--gradient-lime: oklch(0.75 0.18 125);\n--gradient-ocean: oklch(0.65 0.15 205);\n--gradient-wine: oklch(0.55 0.2 325);\n--gradient-rust: oklch(0.6 0.18 45);\n\nInside @layer base:\n@keyframes shine {\n    0% { background-position: 200% 0; }\n    25% { background-position: -200% 0; }\n    100% { background-position: -200% 0; }\n}\n  \n@keyframes gradientFlow {\n    0% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n    100% { background-position: 0% 50%; }\n} */\n\nconst buttonVariants = cva(\n  \"ring-offset-background focus-visible:ring-ring inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium whitespace-nowrap transition-colors focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:outline-none disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border-input bg-background hover:bg-accent hover:text-accent-foreground border\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      effect: {\n        expandIcon: \"group relative gap-0\",\n        ringHover:\n          \"hover:ring-primary/90 transition-all duration-300 hover:ring-2 hover:ring-offset-2\",\n        shine:\n          \"before:animate-shine background-position_0s_ease relative overflow-hidden before:absolute before:inset-0 before:rounded-[inherit] before:bg-[linear-gradient(45deg,transparent_25%,rgba(255,255,255,0.5)_50%,transparent_75%,transparent_100%)] before:bg-[length:250%_250%,100%_100%] before:bg-no-repeat\",\n        shineHover:\n          \"relative overflow-hidden before:absolute before:inset-0 before:rounded-[inherit] before:bg-[linear-gradient(45deg,transparent_25%,rgba(255,255,255,0.5)_50%,transparent_75%,transparent_100%)] before:bg-[length:250%_250%,100%_100%] before:bg-[position:200%_0,0_0] before:bg-no-repeat before:transition-[background-position_0s_ease] before:duration-1000 hover:before:bg-[position:-100%_0,0_0]\",\n        gooeyRight:\n          \"relative z-0 overflow-hidden from-white/40 transition-all duration-500 before:absolute before:inset-0 before:-z-10 before:translate-x-[150%] before:translate-y-[150%] before:scale-[2.5] before:rounded-[100%] before:bg-gradient-to-r before:transition-transform before:duration-1000 hover:before:translate-x-[0%] hover:before:translate-y-[0%]\",\n        gooeyLeft:\n          \"relative z-0 overflow-hidden from-white/40 transition-all duration-500 after:absolute after:inset-0 after:-z-10 after:translate-x-[-150%] after:translate-y-[150%] after:scale-[2.5] after:rounded-[100%] after:bg-gradient-to-l after:transition-transform after:duration-1000 hover:after:translate-x-[0%] hover:after:translate-y-[0%]\",\n        underline:\n          \"after:bg-primary relative !no-underline after:absolute after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-left after:scale-x-100 after:transition-transform after:duration-300 after:ease-in-out hover:after:origin-bottom-right hover:after:scale-x-0\",\n        hoverUnderline:\n          \"after:bg-primary relative !no-underline after:absolute after:bottom-2 after:h-[1px] after:w-2/3 after:origin-bottom-right after:scale-x-0 after:transition-transform after:duration-300 after:ease-in-out hover:after:origin-bottom-left hover:after:scale-x-100\",\n        gradientSlideShow:\n          \"animate-gradient-flow bg-[linear-gradient(-45deg,var(--gradient-lime),var(--gradient-ocean),var(--gradient-wine),var(--gradient-rust))] bg-[size:400%]\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n);\n\ninterface IconProps {\n  icon: React.ElementType;\n  iconPlacement: \"left\" | \"right\";\n}\n\ninterface IconRefProps {\n  icon?: never;\n  iconPlacement?: undefined;\n}\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n}\n\nexport type ButtonIconProps = IconProps | IconRefProps;\n\nconst Button = ({\n  className,\n  variant,\n  effect,\n  size,\n  icon: Icon,\n  iconPlacement,\n  asChild = false,\n  ref,\n  ...props\n}: ButtonProps & ButtonIconProps & { ref?: React.Ref<HTMLButtonElement> }) => {\n  const Comp = asChild ? Slot : \"button\";\n  return (\n    <Comp\n      className={cn(buttonVariants({ variant, effect, size, className }))}\n      ref={ref}\n      {...props}\n    >\n      {Icon &&\n        iconPlacement === \"left\" &&\n        (effect === \"expandIcon\" ? (\n          <div className=\"w-0 translate-x-[0%] pr-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-100 group-hover:pr-2 group-hover:opacity-100\">\n            <Icon />\n          </div>\n        ) : (\n          <Icon />\n        ))}\n      <Slottable>{props.children}</Slottable>\n      {Icon &&\n        iconPlacement === \"right\" &&\n        (effect === \"expandIcon\" ? (\n          <div className=\"w-0 translate-x-[100%] pl-0 opacity-0 transition-all duration-200 group-hover:w-5 group-hover:translate-x-0 group-hover:pl-2 group-hover:opacity-100\">\n            <Icon />\n          </div>\n        ) : (\n          <Icon />\n        ))}\n    </Comp>\n  );\n};\n\nexport { Button, buttonVariants };\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "button"
  ]
}