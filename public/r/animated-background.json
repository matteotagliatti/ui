{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "animated-background",
  "type": "registry:component",
  "title": "Animated Background",
  "description": "A component to animate a background",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "utils"
  ],
  "files": [
    {
      "path": "registry/default/components/animated-background.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { AnimatePresence, motion, Transition } from \"motion/react\";\nimport {\n  Children,\n  cloneElement,\n  ReactElement,\n  useEffect,\n  useId,\n  useState,\n} from \"react\";\n\ntype AnimatedBackgroundProps = {\n  children:\n    | ReactElement<{ \"data-id\": string }>[]\n    | ReactElement<{ \"data-id\": string }>;\n  defaultValue?: string;\n  onValueChange?: (newActiveId: string | null) => void;\n  className?: string;\n  transition?: Transition;\n};\n\nexport function AnimatedBackground({\n  children,\n  defaultValue,\n  onValueChange,\n  className,\n  transition,\n}: AnimatedBackgroundProps) {\n  const [activeId, setActiveId] = useState<string | null>(null);\n  const uniqueId = useId();\n\n  const handleSetActiveId = (id: string | null) => {\n    setActiveId(id);\n\n    if (onValueChange) {\n      onValueChange(id);\n    }\n  };\n\n  useEffect(() => {\n    if (defaultValue !== undefined) {\n      setActiveId(defaultValue);\n    }\n  }, [defaultValue]);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return Children.map(children, (child: any, index) => {\n    const id = child.props[\"data-id\"];\n\n    return cloneElement(\n      child,\n      {\n        key: index,\n        className: cn(\"relative inline-flex\", child.props.className),\n        \"aria-selected\": activeId === id,\n        \"data-checked\": activeId === id ? \"true\" : \"false\",\n        onClick: () => handleSetActiveId(id),\n      },\n      <>\n        <AnimatePresence initial={false}>\n          {activeId === id && (\n            <motion.div\n              layoutId={`background-${uniqueId}`}\n              className={cn(\"absolute inset-0\", className)}\n              transition={transition}\n              initial={{ opacity: defaultValue ? 1 : 0 }}\n              animate={{\n                opacity: 1,\n              }}\n              exit={{\n                opacity: 0,\n              }}\n            />\n          )}\n        </AnimatePresence>\n        <span className=\"z-10\">{child.props.children}</span>\n      </>,\n    );\n  });\n}\n",
      "type": "registry:component"
    }
  ],
  "categories": [
    "motion"
  ]
}